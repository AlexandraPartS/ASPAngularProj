{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from '@angular/core';\nimport { DataService } from './empl-data/data.service';\nimport { Employee } from './empl-data/empl-data.component';\nlet AppComponent = class AppComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.employee = new Employee();\n    this.tableMode = true;\n  }\n  ngOnInit() {\n    this.loadProducts();\n  }\n  loadProducts() {\n    this.dataService.getEmployees().subscribe(data => this.employees = data);\n  }\n  save() {\n    if (this.employee.id == null) {\n      this.dataService.createEmployee(this.employee).subscribe(data => this.employees.push(data));\n    } else {\n      this.dataService.updateEmployee(this.employee).subscribe(data => this.loadProducts());\n    }\n    this.cancel();\n  }\n  editProduct(p) {\n    this.employee = p;\n  }\n  cancel() {\n    this.employee = new Employee();\n    this.tableMode = true;\n  }\n  delete(p) {\n    this.dataService.deleteEmployee(p.id).subscribe(data => this.loadProducts());\n  }\n  add() {\n    this.cancel();\n    this.tableMode = false;\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app',\n  templateUrl: './app.component.html',\n  providers: [DataService]\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}