{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from '@angular/core';\nlet Employee = class Employee {\n  constructor(id, name, birthday, employmentDate, salary, departmentName, departmentId) {\n    this.id = id;\n    this.name = name;\n    this.birthday = birthday;\n    this.employmentDate = employmentDate;\n    this.salary = salary;\n    this.departmentName = departmentName;\n    this.departmentId = departmentId;\n  }\n};\nEmployee = __decorate([Component({\n  selector: 'app-empl-data',\n  templateUrl: './empl-data.component.html'\n})\n//export class EmplDataComponent {\n//  public forecasts: WeatherForecast[] = [];\n//  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\n//    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\n//      this.forecasts = result;\n//    }, error => console.error(error));\n//  }\n//}\n//interface WeatherForecast {\n//  date: string;\n//  temperatureC: number;\n//  temperatureF: number;\n//  summary: string;\n//}\n], Employee);\nexport { Employee };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}